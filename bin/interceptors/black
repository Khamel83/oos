#!/usr/bin/env bash

# Command Interceptor for black - Requires Development Gate
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"

# Check for emergency bypass
if [[ "${DEV_GATE_BYPASS:-}" == "true" ]]; then
    # Find the real black (not our interceptor)
real_command=$(which -a black | grep -v interceptors | head -1)
if [[ -z "$real_command" ]]; then
    case black in
        python|python3) real_command="/usr/bin/python3" ;;
        uv) real_command="/usr/local/bin/uv" ;;
        *) real_command="/usr/bin/black" ;;
    esac
fi
exec "$real_command" "$@"
fi

# Check if gate has been passed recently
if [[ -f "$PROJECT_ROOT/.dev-gate-passed" ]]; then
    # Check if gate is recent (within last hour)
    if command -v stat >/dev/null 2>&1; then
        gate_time=$(stat -c %Y "$PROJECT_ROOT/.dev-gate-passed" 2>/dev/null || stat -f %m "$PROJECT_ROOT/.dev-gate-passed" 2>/dev/null)
        current_time=$(date +%s)
        age=$((current_time - gate_time))

        if [[ $age -lt 3600 ]]; then
            # Gate is recent, allow command
            # Find the real black (not our interceptor)
real_command=$(which -a black | grep -v interceptors | head -1)
if [[ -z "$real_command" ]]; then
    case black in
        python|python3) real_command="/usr/bin/python3" ;;
        uv) real_command="/usr/local/bin/uv" ;;
        *) real_command="/usr/bin/black" ;;
    esac
fi
exec "$real_command" "$@"
        fi
    else
        # No stat command, just check if file exists
        # Find the real black (not our interceptor)
real_command=$(which -a black | grep -v interceptors | head -1)
if [[ -z "$real_command" ]]; then
    case black in
        python|python3) real_command="/usr/bin/python3" ;;
        uv) real_command="/usr/local/bin/uv" ;;
        *) real_command="/usr/bin/black" ;;
    esac
fi
exec "$real_command" "$@"
    fi
fi

# Gate not passed or stale
echo -e "\033[0;31m‚ùå Development environment not ready\033[0m"
echo -e "\033[0;33mRun: ./bin/dev-gate.sh\033[0m"
echo
echo "This command (black) is blocked until development environment is validated."
echo "Emergency bypass: DEV_GATE_BYPASS=true black"
exit 1

[project]
name = "oos"
version = "1.2.0"
description = "Organized Operational Setup - Modern development workflow automation"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
authors = [
    {name = "OOS Team", email = "dev@oos.dev"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

# Core OOS functionality uses only Python standard library
dependencies = []

[project.optional-dependencies]
# MCP Server Dependencies
mcp = [
    "mcp>=1.0.0",
]

# Test Dependencies
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "PyGithub>=1.58.0",
    "scikit-learn>=1.0.0",
    "PyYAML>=6.0",
]

# Development Dependencies
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
]

# Dashboard functionality (optional)
dashboard = [
    "flask>=2.0.0",
    "requests>=2.25.0",
]

# All development dependencies
all = [
    "oos[mcp,test,dev,dashboard]",
]

[project.urls]
Homepage = "https://github.com/oos-org/oos"
Repository = "https://github.com/oos-org/oos"
Issues = "https://github.com/oos-org/oos/issues"

[project.scripts]
oos = "run:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["lib"]

[tool.uv]
dev-dependencies = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "PyGithub>=1.58.0",
    "scikit-learn>=1.0.0",
    "PyYAML>=6.0",
    "mcp>=1.0.0",
]

[tool.black]
line-length = 88

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "I"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "asyncio: marks tests as async",
    "slow: marks tests as slow",
]
